using GameplayPatches;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GameplayPatches
{
    public class AiPegasusNoFusions : Patch
    {
        static int patchLocation = 0x106C80;
        

        public override bool IsApplied()
        {
            return dataAccess.CheckIfPatchApplied(patchLocation, new byte[52] { 0x50, 0xFF, 0xBD, 0x27, 0x80, 0x00, 0xBF, 0x7F, 0x70, 0x00, 0xB7, 0x7F, 0x60, 0x00, 0xB6, 0x7F, 0x50, 0x00, 0xB5, 0x7F, 0x40, 0x00, 0xB4, 0x7F, 0x30, 0x00, 0xB3, 0x7F, 0x20, 0x00, 0xB2, 0x7F, 0x10, 0x00, 0xB1, 0x7F, 0x00, 0x00, 0xB0, 0x7F, 0x28, 0xA6, 0xC0, 0x70, 0x01, 0x00, 0x10, 0x24, 0x28, 0xAE, 0xA0, 0x70 });
        }

        protected override void Apply()
        {
            dataAccess.ApplyPatch(patchLocation, new byte[480] { 0x50, 0xFF, 0xBD, 0x27, 0x80, 0x00, 0xBF, 0x7F, 0x70, 0x00, 0xB7, 0x7F, 0x60, 0x00, 0xB6, 0x7F, 0x50, 0x00, 0xB5, 0x7F, 0x40, 0x00, 0xB4, 0x7F, 0x30, 0x00, 0xB3, 0x7F, 0x20, 0x00, 0xB2, 0x7F, 0x10, 0x00, 0xB1, 0x7F, 0x00, 0x00, 0xB0, 0x7F, 0x28, 0xA6, 0xC0, 0x70, 0x01, 0x00, 0x10, 0x24, 0x28, 0xAE, 0xA0, 0x70, 0x03, 0x00, 0x80, 0x16, 0x28, 0xB6, 0x80, 0x70, 0x5F, 0x00, 0x00, 0x10, 0xFF, 0xFF, 0x02, 0x24, 0x4C, 0xBF, 0x09, 0x0C, 0x90, 0x00, 0xA5, 0x27, 0x3C, 0x00, 0x97, 0x96, 0x28, 0x26, 0xC0, 0x72, 0x88, 0xBF, 0x09, 0x0C, 0x28, 0x8E, 0x00, 0x70, 0x2A, 0x08, 0x02, 0x00, 0x14, 0x00, 0x20, 0x10, 0x28, 0x26, 0xC0, 0x72, 0x90, 0x00, 0xB2, 0x27, 0x00, 0x00, 0x44, 0x8E, 0x08, 0x00, 0xE4, 0x56, 0x04, 0x00, 0x52, 0x26, 0x38, 0xBF, 0x09, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x43, 0x11, 0x02, 0x00, 0x02, 0x00, 0x40, 0x14, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0xB1, 0xA2, 0x04, 0x00, 0x52, 0x26, 0x01, 0x00, 0x31, 0x26, 0x88, 0xBF, 0x09, 0x0C, 0x28, 0x26, 0xC0, 0x72, 0x2A, 0x10, 0x22, 0x02, 0xF1, 0xFF, 0x40, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x26, 0xC0, 0x72, 0x88, 0xBF, 0x09, 0x0C, 0x28, 0x9E, 0x00, 0x70, 0x2A, 0x08, 0x02, 0x00, 0x38, 0x00, 0x20, 0x10, 0x01, 0x00, 0x02, 0x24, 0x80, 0x10, 0x13, 0x00, 0x21, 0x10, 0x5D, 0x00, 0x90, 0x00, 0x51, 0x24, 0x00, 0x00, 0x25, 0x8E, 0xD8, 0x23, 0x09, 0x0C, 0x28, 0x26, 0xE0, 0x72, 0x27, 0x00, 0x42, 0x04, 0x01, 0x00, 0x73, 0x26, 0x38, 0xBF, 0x09, 0x0C, 0x00, 0x00, 0x24, 0x8E, 0x43, 0x19, 0x02, 0x00, 0x02, 0x00, 0x02, 0x24, 0x20, 0x00, 0x62, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x8E, 0x1B, 0x03, 0x02, 0x24, 0x1C, 0x00, 0x42, 0x12, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x03, 0x02, 0x24, 0x19, 0x00, 0x42, 0x12, 0x00, 0x00, 0x00, 0x00, 0x28, 0x26, 0xC0, 0x72, 0xE8, 0x24, 0x09, 0x0C, 0x00, 0x00, 0x24, 0x8E, 0x3C, 0x1C, 0x02, 0x00, 0x38, 0x00, 0x82, 0x86, 0x3F, 0x1C, 0x03, 0x00, 0x21, 0x10, 0x43, 0x00, 0x38, 0x00, 0x82, 0xA6, 0xE8, 0x24, 0x09, 0x0C, 0x00, 0x00, 0x24, 0x8E, 0x3A, 0x00, 0x83, 0x86, 0x3C, 0x24, 0x02, 0x00, 0x3F, 0x24, 0x04, 0x00, 0x21, 0x10, 0xB0, 0x02, 0x01, 0x00, 0x10, 0x26, 0x21, 0x18, 0x64, 0x00, 0x3A, 0x00, 0x83, 0xA6, 0x06, 0x00, 0x00, 0x10, 0x06, 0x00, 0x53, 0xA0, 0x28, 0x26, 0xC0, 0x72, 0x88, 0xBF, 0x09, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x28, 0x9E, 0x40, 0x70, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x73, 0x26, 0x88, 0xBF, 0x09, 0x0C, 0x28, 0x26, 0xC0, 0x72, 0x2A, 0x10, 0x62, 0x02, 0xCF, 0xFF, 0x40, 0x14, 0x80, 0x10, 0x13, 0x00, 0x01, 0x00, 0x02, 0x24, 0x80, 0x00, 0xBF, 0x7B, 0x70, 0x00, 0xB7, 0x7B, 0x60, 0x00, 0xB6, 0x7B, 0x50, 0x00, 0xB5, 0x7B, 0x40, 0x00, 0xB4, 0x7B, 0x30, 0x00, 0xB3, 0x7B, 0x20, 0x00, 0xB2, 0x7B, 0x10, 0x00, 0xB1, 0x7B, 0x00, 0x00, 0xB0, 0x7B, 0x08, 0x00, 0xE0, 0x03, 0xB0, 0x00, 0xBD, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 });
        }

        protected override void Remove()
        {
            dataAccess.ApplyPatch(patchLocation, new byte[480] { 0x20, 0xFF, 0xBD, 0x27, 0x90, 0x00, 0xBF, 0x7F, 0x80, 0x00, 0xBE, 0x7F, 0x70, 0x00, 0xB7, 0x7F, 0x60, 0x00, 0xB6, 0x7F, 0x50, 0x00, 0xB5, 0x7F, 0x40, 0x00, 0xB4, 0x7F, 0x30, 0x00, 0xB3, 0x7F, 0x20, 0x00, 0xB2, 0x7F, 0x10, 0x00, 0xB1, 0x7F, 0x28, 0x9E, 0xC0, 0x70, 0x00, 0x00, 0xB0, 0x7F, 0x28, 0xF6, 0xA0, 0x70, 0x03, 0x00, 0x60, 0x16, 0x28, 0xA6, 0x80, 0x70, 0x5B, 0x00, 0x00, 0x10, 0xFF, 0xFF, 0x02, 0x24, 0x4C, 0xBF, 0x09, 0x0C, 0xC0, 0x00, 0xA5, 0x27, 0xFF, 0xFF, 0x17, 0x24, 0x28, 0x26, 0x80, 0x72, 0x28, 0x86, 0xE0, 0x72, 0x88, 0xBF, 0x09, 0x0C, 0x28, 0xAE, 0x00, 0x70, 0x2A, 0x08, 0x02, 0x00, 0x51, 0x00, 0x20, 0x10, 0x28, 0x16, 0x00, 0x72, 0xC0, 0x00, 0xB1, 0x27, 0xA0, 0x00, 0xB2, 0x27, 0xDE, 0x00, 0xA0, 0xA7, 0xDC, 0x00, 0xA0, 0xA7, 0x00, 0x00, 0x36, 0x8E, 0x28, 0x26, 0xC0, 0x72, 0x38, 0xBF, 0x09, 0x0C, 0x00, 0x00, 0x40, 0xAE, 0x43, 0x11, 0x02, 0x00, 0x3E, 0x00, 0x40, 0x54, 0x04, 0x00, 0x31, 0x26, 0x00, 0x00, 0x45, 0x8E, 0xDC, 0x00, 0xA9, 0x27, 0xDE, 0x00, 0xAA, 0x27, 0xFF, 0x00, 0xA6, 0x32, 0xFF, 0xFF, 0xC7, 0x32, 0x28, 0x26, 0x80, 0x72, 0xA4, 0xE2, 0x09, 0x0C, 0x28, 0x46, 0x00, 0x70, 0x00, 0x00, 0x42, 0xAE, 0x90, 0xE3, 0x09, 0x0C, 0x00, 0x00, 0x44, 0x8E, 0x00, 0x00, 0x42, 0xAE, 0x00, 0x00, 0x45, 0x8E, 0x28, 0x26, 0x80, 0x72, 0x28, 0x36, 0x00, 0x70, 0xC4, 0xE3, 0x09, 0x0C, 0x28, 0x3E, 0x00, 0x70, 0x28, 0x2E, 0xC0, 0x72, 0x28, 0xB6, 0x40, 0x70, 0xC4, 0xBE, 0x09, 0x0C, 0x28, 0x26, 0x80, 0x72, 0x01, 0x00, 0x03, 0x24, 0x22, 0x00, 0x43, 0x14, 0x2A, 0x08, 0x16, 0x02, 0x2A, 0x08, 0xF6, 0x02, 0x22, 0x00, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x8E, 0xC0, 0x00, 0xA6, 0x27, 0x58, 0xDB, 0x04, 0x0C, 0x28, 0x26, 0x80, 0x72, 0x00, 0x00, 0x42, 0x8E, 0x06, 0x00, 0xC5, 0x27, 0x74, 0xE3, 0x09, 0x0C, 0x02, 0x00, 0x44, 0x24, 0x00, 0x00, 0x42, 0x8E, 0x00, 0x00, 0x45, 0x94, 0x5C, 0x73, 0x07, 0x0C, 0x28, 0x26, 0x60, 0x72, 0x00, 0x00, 0x64, 0x8E, 0x03, 0x1C, 0x16, 0x00, 0xFF, 0xFF, 0xC2, 0x32, 0x2A, 0x08, 0x16, 0x02, 0x28, 0xBE, 0xC0, 0x72, 0x08, 0x00, 0x84, 0x94, 0xFF, 0x1F, 0x84, 0x30, 0x23, 0x18, 0x64, 0x00, 0x38, 0x00, 0x63, 0xA6, 0x00, 0x00, 0x63, 0x8E, 0x0A, 0x00, 0x63, 0x84, 0xFF, 0x1F, 0x63, 0x30, 0x23, 0x10, 0x43, 0x00, 0x07, 0x00, 0x20, 0x10, 0x3A, 0x00, 0x62, 0xA6, 0x05, 0x00, 0x00, 0x10, 0x28, 0x86, 0xC0, 0x72, 0x2A, 0x08, 0x16, 0x02, 0x02, 0x00, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x28, 0x86, 0xC0, 0x72, 0x04, 0x00, 0x31, 0x26, 0x04, 0x00, 0x52, 0x26, 0x01, 0x00, 0xB5, 0x26, 0x88, 0xBF, 0x09, 0x0C, 0x28, 0x26, 0x80, 0x72, 0x2A, 0x10, 0xA2, 0x02, 0xB4, 0xFF, 0x40, 0x14, 0x00, 0x00, 0x00, 0x00, 0x28, 0x16, 0x00, 0x72, 0x90, 0x00, 0xBF, 0x7B, 0x80, 0x00, 0xBE, 0x7B, 0x70, 0x00, 0xB7, 0x7B, 0x60, 0x00, 0xB6, 0x7B, 0x50, 0x00, 0xB5, 0x7B, 0x40, 0x00, 0xB4, 0x7B, 0x30, 0x00, 0xB3, 0x7B, 0x20, 0x00, 0xB2, 0x7B, 0x10, 0x00, 0xB1, 0x7B, 0x00, 0x00, 0xB0, 0x7B, 0x08, 0x00, 0xE0, 0x03, 0xE0, 0x00, 0xBD, 0x27, 0x00, 0x00, 0x00, 0x00 });
        }
    }
}
