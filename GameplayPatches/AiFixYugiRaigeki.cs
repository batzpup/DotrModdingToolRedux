using GameplayPatches;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GameplayPatches
{
    public class AiFixYugiRaigeki : Patch
    {
        static int patchLocation = 0x1327A8;
        

        public override bool IsApplied()
        {
            return dataAccess.CheckIfPatchApplied(patchLocation, new byte[20] { 0x08, 0x28, 0x00, 0x72, 0xFF, 0x00, 0x46, 0x30, 0x03, 0x3A, 0x02, 0x00, 0x7C, 0xE0, 0x09, 0x0C, 0x08, 0x20, 0x40, 0x72 });
        }

        protected override void Apply()
        {
            dataAccess.ApplyPatch(patchLocation, new byte[20] { 0x08, 0x28, 0x00, 0x72, 0xFF, 0x00, 0x46, 0x30, 0x03, 0x3A, 0x02, 0x00, 0x7C, 0xE0, 0x09, 0x0C, 0x08, 0x20, 0x40, 0x72 });
        }

        protected override void Remove()
        {
            dataAccess.ApplyPatch(patchLocation, new byte[20] { 0x28, 0x26, 0x00, 0x72, 0xFF, 0x00, 0x46, 0x30, 0x03, 0x3A, 0x02, 0x00, 0x7C, 0xE0, 0x09, 0x0C, 0x28, 0x2E, 0x40, 0x72 });
        }
    }
}
